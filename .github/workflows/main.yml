name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
    build:
        name: make result.zip
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v2
        - name: build
          run: |
              ./build.sh
              cd build/output
              zip -r ../result.zip * .[^.]*
              cd ../../
        - name: upload artifact
          uses: actions/upload-artifact@master
          with:
              name: build
              path: build/result.zip
    release:
        needs: [build]
        name: make pre-release
        runs-on: ubuntu-latest
        steps:
        - name: Get current date
          id: date
          run: echo "::set-output name=date::$(date +'%Y%m%d%H%m%S')"
        - name: download artifact
          uses: actions/download-artifact@v2
          with:
              name: build
        - name: create pre-release
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
          with:
            tag_name: ${{ steps.date.outputs.date }}
            release_name: Auto ${{ steps.date.outputs.date }}
            body: auto release
            draft: true
            prerelease: false
        - name: Upload Release Asset
          id: upload-release-asset
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
            asset_path: ./result.zip
            asset_name: result.zip
            asset_content_type: application/zip
        - name: public release
          uses: eregon/publish-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            release_id: ${{ steps.create_release.outputs.id }}

