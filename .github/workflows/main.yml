name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
    build:
        name: make result.zip
        runs-on: ubuntu-latest
        steps:
        - name: make nameWithVersion
          id: nameWithVersion
          run: echo "::set-output name=nameWithVersion::${GITHUB_REPOSITORY#*/}-$(date +'%Y%m%d%H%m%S')"
        - uses: actions/checkout@v2
        - name: build
          run: |
              ./build.sh
              cd build/output
              zip -r ../result.zip * .[^.]*
              cd ../../
        - name: upload artifact result.zip
          uses: actions/upload-artifact@master
          with:
              name: build
              path: build/result.zip
        - name: upload artifact output folder
          uses: actions/upload-artifact@master
          with:
              name: second
              path: build/output
        - run: echo ${{ steps.nameWithVersion.outputs.nameWithVersion }} > nameWithVersion
        - name: upload nameWithVersion
          uses: actions/upload-artifact@master
          with:
              name: nameWithVersion
              path: nameWithVersion
    release:
        needs: [build]
        name: make release
        runs-on: ubuntu-latest
        steps:
        - name: make nameWithVersion
          uses: actions/download-artifact@v2
          with:
              name: nameWithVersion
        - id: nameWithVersion
          run: |
              echo "::set-output name=nameWithVersion::$(cat nameWithVersion)"
              rm nameWithVersion
        - name: download build
          uses: actions/download-artifact@v2
          with:
              name: build
        - name: download second
          uses: actions/download-artifact@v2
          with:
              name: second
              path: second
        - run: find . > fileList.txt
        - name: create release
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: ${{ steps.nameWithVersion.outputs.nameWithVersion }}
            release_name: ${{ steps.nameWithVersion.outputs.nameWithVersion }}
            body: auto release
            draft: true
            prerelease: false
        - name: Upload Release Asset result.zip
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ./result.zip
            asset_name: result.zip
            asset_content_type: application/zip
        - name: Upload Release Asset fileList.txt
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ./fileList.txt
            asset_name: fileList.txt
            asset_content_type: text/plain
        - name: public release
          uses: eregon/publish-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            release_id: ${{ steps.create_release.outputs.id }}

